{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAsCeA,EApCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,yBAAKC,UAAU,8CACf,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACRF,EAAKU,KAAI,SAACC,EAAIC,GAAL,OACN,0BAAMC,IAAOD,EAAOV,UAAU,4FAC7BS,SCEJG,EA9BK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAEZC,mBAAS,IAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,KAUpC,OACE,yBAAKhB,UAAU,kDACb,0BAAMiB,SARO,SAACC,GAEhBA,EAAEC,iBACFN,EAAWE,IAKmBf,UAAU,mBACpC,yBAAKA,UAAU,8DACb,2BAAOoB,SAAY,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAU,kHACzDuB,KAAK,OACLC,YAAY,yBAEd,4BACExB,UAAU,kIACVuB,KAAK,UAFP,cCqBKE,MArCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAXAC,qBAAU,WACRC,MAAM,qEAAD,OAAsEH,EAAtE,wCAEFI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLV,EAAUU,EAAKC,MACfT,GAAa,MAEdU,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACV,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAGxCa,GAA+B,IAAlBF,EAAOiB,QAAgB,wBAAI3C,UAAU,sCAAd,mBAGtC4B,EACC,wBAAI5B,UAAU,sCAAd,cAEA,yBAAKA,UAAU,0BACZ0B,EAAOlB,KAAI,SAACX,GAAD,OACV,kBAAC,EAAD,CAAWc,IAAKd,EAAM+C,GAAI/C,MAAOA,UC5B7CgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c8bc16f0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({ image }) => {\r\n    const tags = image.tags.split(',')\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n        <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n        <div className=\"px-6 py-4\">\r\n          <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n            Photo By {image.user}\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <strong>Views: </strong>\r\n              {image.views}\r\n            </li>\r\n            <li>\r\n              <strong>Downloads: </strong>\r\n              {image.downloads}\r\n            </li>\r\n            <li>\r\n              <strong>Likes: </strong>\r\n              {image.likes}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"px-6 py-4\">\r\n              {tags.map((tag,index) => (\r\n                  <span key = {index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n                  {tag}\r\n                </span>\r\n              ))}          \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard\r\n","import React, { useState } from \"react\";\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    searchText(text)\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit = {onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n          <input onChange = {e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n            type=\"text\"\r\n            placeholder=\"Search Image Term...\"\r\n          />\r\n          <button\r\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from './components/ImageSearch'\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=18734320-bae6624ce31a1c96e79fee626&q=${term}&image_type=photo&pretty=true\n    `)\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n      {\n        !isLoading && images.length === 0 && <h1 className=\"text-6xl text-center mx-auto mt-32\">No Images Found</h1>\n      }\n\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}